function [y_sum, t_model] = generateProcess
n_max=5000; % число отсчётов анализируемого процесса
t0=0.01; % шаг квантования входного процесса
t_max=t0*n_max; % время моделирования
t_model=[0.0:t0:t_max]; % временная шкала

% параметры фильтра, формирующего полезный процесс 1
k_us=1.0;% коэффициент усиления фильтра-прототипа <= Менять тут
wf=1.0; %собственная частота фильтра-прототипа (аналогового) <= и ещё тут
psi=0.2; % коэффициент затухания
tf=2.0*pi/wf;% период колебаний
wft0=wf*t0;

% коэффициенты ЦФ
koef_a=[1.0+2.0*psi*wft0+wft0^2,-2.0*(1.0+psi*wft0),1.0];
koef_b=[k_us*(t0^2)*(2.0*psi*tf^2)];

% Белый шум
x_s=rand(1,length(t_model))-0.5;
y_s1=filter(koef_b,koef_a,x_s); % процесс1
figure
plot(t_model,y_s1,'k-','LineWidth',2);
%artist('Синтезированный процесс','Время наблюдения \it t ','\it u(t)')
y_s2=diric(t_model,4); % процесс2, накладываемый
figure
plot(t_model,y_s2,'k-','LineWidth',2);
%artist('Импульсная помеха','Время наблюдения \it t ','\it f(t,4)')

% веса процессов
alfa=1.0; % <= и ещё здесь
beta=0.5; % <= и здесь
y_sum=alfa*y_s1+beta*y_s2; %итоговый процесс
figure
plot(t_model,y_sum,'k-','LineWidth',2);
%artist('Наблюдаемый сигнал','Время наблюдения \it t ','\it s(t)')
end

