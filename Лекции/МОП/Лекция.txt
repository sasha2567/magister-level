Математические основы парадиг программирования

Введение в функциональное программирование

в традиционных или итеративных языках программирования состояние программ определяется набором значений переменных. пусть начальное состояние программы:
G0 -> G'
Во время выполнения итеративной программы она проходит через несколько состояний:
G = G0 -> G1 -> ... -> G'
Состояние программы при итеративном проходе изменяется при помощи присваивания. Ход работы алгоритма может меняться с помощью управляющих операторов. 
Функциональная программа предствляет собой некое выражение (в виде функции). Выполнение этой программы предполагает вычисление этой функции и возврат результата:
G = f(G0)
Отличительные черты функционального программирования:
	- не используются переменные в итеративном смысле
	- как правило нет чиклов
	- не имеет смысла последовательность операторов
	- вместо циклов применяется рекурсия
Основы лямбда исчислений

l x.E
R->(R->R)
Переменные могут быть свободными или связннымию В общем слечае нельзя менять переменную. Часть выражения, находящаяся внутри области связывания, называется областью видимости. 

Лямбда исчисления как формальная система
l - терм:
состоит из переменных и фиксированного набора констант с помощью применения функций и лямбда-абстрогирований
	- переменные
	- константы
	- комбинации
	- абстракции
Exp = Var | Const | Exp Exp | l Var.Exp

Свободная переменная - FV(S):
							FV(x)={x}
							FV(c)=0
							FV(ST)=FV(S)UFV(T)
							FV(l x.S)=FV(S)\{x}
Связанная переменная - BV(S):
							BV(X)=0
							BV(C)=0
							BV(ST)=BV(S)UBV(T)
							BV(l x.S)=BV(S)U{x}

Подстановка (смотри рисунок )